        aseg
offset  equ  09c00h
        org  4a00h+offset
bios:   jp   boot
        jp   wboot
        jp   const
        jp   conin
        jp   conout
        jp   list
        ret                        ; PUNCH
        nop
        nop
        xor  a                     ; READER
        ret
        nop
        jp   home
        jp   seldsk
        jp   settrk
        jp   setsec
        jp   setdma
        jp   read
        jp   write
        jp   listst
        jp   sectrn
        ret
        nop
        nop
        ret
        nop
        nop
savstk: di
        ex   (sp),hl
        ld   (retjmp),hl
        pop  hl
        ld   (usrstk),sp
        ld   sp,cpmstk
        push hl
        ld   hl,getstk
        ex   (sp),hl
        jp   <retjmp: dw 0>
getstk: ld   sp,<usrstk: dw 0>
        ei
        ret
diskio: di
        in   a,(0feh)
        and  70h
        or   4
        out  (0feh),a
        ret
cpmio:  in   a,(0feh)
        and  70h
        or   5
        out  (0feh),a
        ret
cursor: defw 0
const:  ld   a,(inlen)
        or   a
        ret  z
        ld   a,0ffh
        ret
conin:  ld   a,(inlen)
        or   a
        jr   z,conin
        push hl
        push de
        push bc
        ld   hl,kbdbuf+1
        ld   de,kbdbuf
        ld   bc,60
        ld   a,(de)
        ldir
        ld   hl,inlen
        dec  (hl)
        pop  bc
        pop  de
        pop  hl
        ret
intkbd: ld   (intret),sp
        ld   sp,intstk
        push af
        push hl
        push de
        push bc
        call diskio
        ld   a,(37ech)
        ld   a,(37e1h)
        call inkbd1
        pop  bc
        pop  de
        pop  hl
        pop  af
        ld   sp,<intret: dw 0>
        ei
        reti
inkbd1: ld   a,(curflg)
        or   a
        jr   nz,inkbdx
        ld   hl,curcnt
        dec  (hl)
        jr   nz,inkbdx
        ld   a,10
        ld   (hl),a
        ld   hl,(cursor)
        ld   a,(hl)
        cp   176
        ld   a,(curchr)
        jr   z,inkbdy
        ld   a,176
inkbdy: ld   (hl),a
inkbdx: call inch1
        or   a
        jr   z,inkbd3
        ld   c,a
        ld   (rptchr),a
        ld   a,(rptcn1)
        ld   (rptcnt),a
inkbd2: ld   hl,inlen
        ld   a,(hl)
        cp   32
        jp   nc,bell
        inc  (hl)
        ld   hl,kbdbuf
        ld   e,a
        ld   d,0
        add  hl,de
        ld   (hl),c
        ret
inkbd3: ld   hl,rptcnt
        dec  (hl)
        ret  nz
        call diskio
        ld   a,(387fh)
        or   a
        push af
        call cpmio
        pop  af
        ret  z
        ld   a,(rptcn2)
        ld   (hl),a
        dec  hl
        ld   c,(hl)
        jr   inkbd2
curcnt: defb 10
curchr: defb 0
rptchr: defb 0
rptcnt: defb 0
rptcn1: defb 013
rptcn2: defb 002
inlen:  defb 0
curon:  defb 0
curflg: defb 0
newcur: defb 0
bell:   ld   b,0
bell1:  push bc
        ld   a,2
        out  (0ffh),a
        ld   b,64
        djnz $
        ld   a,0
        out  (0ffh),a
        ld   b,64
        djnz $
        pop  bc
        djnz bell1
        xor  a
        ret
conout: ld   a,(3)
        and  3
        cp   2
        jp   z,list
        cp   1
        ret  nz
z8024:  jp   <escjmp: dw z80241>
z80241: call savstk
        call diskio
        push hl
        push de
        push bc
        ld   hl,(cursor)
        ld   a,(curchr)
        ld   (hl),a
        ld   a,c
        cp   20h
        jr   c,ctrl
        ld   (hl),a
        inc  hl
grend0: bit  6,h
        jr   z,grend2
        ld   hl,3fc0h
        call scroll
grend2: ld   a,(hl)
        ld   (curchr),a
        ld   (cursor),hl
        call cpmio
        ld   a,c
        pop  bc
        pop  de
        pop  hl
        ret
ctrl:   ld   de,grend0
        push de
        ld   a,c
        add  a,a
        ld   e,a
        ld   d,0
        push hl
        ld   hl,gtab
        add  hl,de
        ld   a,(hl)
        inc  hl
        ld   h,(hl)
        ld   l,a
        ex   (sp),hl
        ret
gtab:                                                            32:defw grnix
gtabed  equ  $
gcode   macro x,adr
        org   gtab+2*x
        defw  adr
        endm
        gcode 7,bell
        gcode 8,back
        gcode 9,tab
        gcode 10,lf
        gcode 11,chome
        gcode 12,cls
        gcode 13,cr
        gcode 14,curson
        gcode 15,cursof
        gcode 27,escape
        gcode 28,currg
        gcode 29,curlf
        gcode 30,curup
        gcode 31,curdw
        org  gtabed
grnix:  xor  a
        ret
back:   dec  hl
        bit  2,h
        jr   nz,back1
        inc  hl
        ret
back1:  ld   (hl),20h
        ret
cr:     ld   a,0c0h
        and  l
        ld   l,a
        ret
lf:     ld   de,40h
        add  hl,de
        ret
tab:    ld   a,20h
        ld   (hl),a
        inc  hl
        bit  6,h
        jr   z,tab1
        call scroll
        ld   hl,3fc0h
tab1:   ld   a,l
        and  7
        jr   nz,tab
        ret
curup:  ld   de,0ffc0h
        add  hl,de
        bit  2,h
        ret  nz
        ld   de,40h
        add  hl,de
        ret
currg:  inc  hl
        ret
curlf:  dec  hl
        bit  2,h
        ret  nz
        inc  hl
        ret
curdw:  ld   de,40h
        add  hl,de
        ret
chome:  ld   hl,3c00h
        ret
curson: xor  a
curso1: ld   (curflg),a
        ret
cursof: ld   a,1
        jr   curso1
escape: push hl
        ld   hl,esc1
        ld   (escjmp),hl
        pop  hl
        ret
esc1:   ld   a,c
        cp   '?'
        jr   z,esc2
        cp   '='
        jr   z,esc3
esc11:  push hl
esc12:  xor  a
        ld   (curon),a
        ld   hl,z80241
        ld   (escjmp),hl
        pop  hl
        ret
esc2:   ld   hl,(cursor)
        ld   de,0c400h
        add  hl,de
        ld   a,l
        and  3fh
        add  a,20h
        ld   e,a
        srl  h
        rr   l
        srl  h
        rr   l
        srl  h
        rr   l
        srl  h
        rr   l
        srl  h
        rr   l
        srl  h
        rr   l
        ld   a,20h
        add  a,l
        ld   d,a
        jr   esc11
esc3:   push hl
        ld   hl,esc31
esc30:  ld   (escjmp),hl
        pop  hl
        ret
esc31:  ld   a,c
        ld   (newcur),a
        push hl
        ld   hl,esc32
        jr   esc30
esc32:  call savstk
        push hl
        ld   a,(curchr)
        ld   hl,(cursor)
        ld   (hl),a
        ld   a,(newcur)
        sub  20h
        cp   16
        jr   c,esc33
        ld   a,0
esc33:  ld   l,a
        ld   h,0
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        ld   a,c
        sub  20h
        cp   64
        jr   c,esc34
        ld   a,0
esc34:  ld   e,a
        ld   d,3ch
        add  hl,de
        ld   (cursor),hl
        ld   a,(hl)
        ld   (curchr),a
        jr   esc12
scroll: push hl
        push de
        push bc
        ld   hl,3c40h
        ld   de,3c00h
        ld   bc,3c0h
        ldir
        ld   hl,3fc0h
        ld   de,3fc1h
        ld   bc,3fh
        ld   (hl),20h
        ldir
        pop  bc
        pop  de
        pop  hl
        ret
cls:    ld   hl,3c00h
        push hl
        ld   de,3c01h
        ld   bc,03ffh
        ld   (hl),20h
        ldir
        pop  hl
        ret
inch1:  push hl
        push de
        push bc
        call diskio
        ld   bc,3801h
        ld   hl,keybuf
        ld   d,0
inch11: ld   a,(bc)
        ld   e,a
        xor  (hl)
        and  e
        ld   (hl),e
        jr   nz,inch12
inchrd: inc  hl
        inc  d
        rlc  c
        jr   nc,inch11
        xor  a
        jp   inchex
inch12: ld   e,a
        push bc
        ld   bc,500h
        call delay
        pop  bc
        ld   a,(bc)
        and  e
        jp   z,inchex
        ld   b,-1
inch13: inc  b
        rrca
        jr   nc,inch13
        ld   a,d
        rlca
        rlca
        rlca
        add  a,b
        cp   1fh
        ld   hl,3880h
        ld   b,a
        jr   nc,inch16
        bit  6,(hl)
        ld   a,0
        jr   nz,inch15
        bit  0,(hl)
        ld   a,(chrlok)
        jr   z,inch15
        xor  20h
inch15: add  a,b
        jr   inched
inch16: jr   nz,inch99
        ld   a,0
        bit  6,(hl)
        jr   nz,inch15
        ld   a,60h
        bit  0,(hl)
        jr   z,inch15
        ld   a,40h
        jr   inch15
inch99: cp   2ch
        jr   nc,inch17
        xor  a
        bit  0,(hl)
        jr   nz,inch15
        ld   a,10h
        jr   inch15
inch17: cp   30h
        jr   nc,inch18
        xor  a
        bit  0,(hl)
        jr   z,inch15
        ld   a,10h
        jr   inch15
inch18: cp   38h
        jr   c,roedl1
        cp   3eh
        jr   nz,roedl2
        bit  0,(hl)
        jr   z,roedl2
        ld   a,(chrlok)
        xor  20h
        ld   (chrlok),a
roedl2: xor  a
        jp   inchex
roedl1: ld   hl,ctltab
        sub  30h
        ld   c,a
        ld   b,0
        add  hl,bc
        add  hl,bc
        ld   a,(3880h)
        bit  0,a
        jr   z,inch19
        inc  hl
inch19: ld   a,(hl)
inched: ld   bc,2000h
        call delay
inchex: ld   b,a
        call cpmio
        ld   a,b
        pop  bc
        pop  de
        pop  hl
        ret
delay:  push af
delay1: dec  bc
        ld   a,b
        or   c
        jr   nz,delay1
        pop  af
        ret
ctltab: defb 13,13,27,27,3,3,05,26,24,23,8,01,04,6,32,32
keybuf: defb 0,0,0,0,0,0,0,0
chrlok: defb 40h
list:   ld   a,(3)
        and  0c0h
        cp   40h
        jp   z,conout
        cp   80h
        ret  nz
list1:  call listst
        jr   z,list1
        call savstk
        call diskio
        ld   a,c
        ld   (37e8h),a
        jp   cpmio
listst: call savstk
        call diskio
        ld   a,(37e8h)
        and  0f0h
        cp   30h
        ld   b,0
        jr   nz,lists1
        dec  b
lists1: call cpmio
        ld   a,b
        or   a
        ret
seldsk: call savstk
        call diskio
        ld   a,c
        cp   7
        jr   nc,seld2
        and  3
        inc  a
        ld   b,80h
seld1:  rlc  b
        dec  a
        jr   nz,seld1
        ld   a,c
        and  4
        rrca
        rrca
        rrca
        rrca
        or   80h
        ld   (37eeh),a
        ld   a,0d0h
        ld   (37ech),a
        bit  0,e
        jr   nz,seld3
        ld   a,b
        ld   (37e1h),a
        ld   a,0d0h
        ld   (37ech),a
        ld   a,(37ech)
        and  2
        ld   e,a
        ld   hl,8000h
seld11: ld   a,(37ech)
        and  2
        xor  e
        jr   nz,seld3
        dec  hl
        ld   a,h
        or   l
        jr   nz,seld11
seld2:  ld   hl,0
        call cpmio
        ret
seld3:  ld   a,(drvbin)
        xor  b
        ld   (selflg),a
        ld   a,b
        ld   (drvbin),a
        ld   a,(drvasc)
        ld   hl,trksec
        add  a,l
        ld   l,a
        ld   a,(37edh)
        ld   (hl),a
        ld   a,c
        ld   (drvasc),a
        ld   hl,trksec
        add  a,l
        ld   l,a
        ld   a,(hl)
        ld   (37edh),a
        ld   l,c
        ld   h,0
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        push hl
        ld   de,pdtab
        add  hl,de
        ld   de,pdrive
        ld   bc,16
        ldir
        pop  hl
        ld   a,(pdrive+15)
        bit  7,a
        jr   z,seld2
        bit  6,a
        ld   a,<nop>
        jr   z,seldx
        ld   a,<cpl>
seldx:  ld   (inv1),a
        ld   de,dph
        add  hl,de
        call cpmio
        ret
select: ld   a,(pdrive+15)
        ld   hl,37ech
        and  1
        or   0feh
        ld   (hl),a
        ld   (hl),0d0h
        inc  hl
        inc  hl
        ld   a,(drvasc)
        and  4
        rrca
        rrca
        rrca
        rrca
        or   80h
        ld   (hl),a
        ld   a,0d0h
        ld   (37ech),a
resel:  ld   a,(drvbin)
        ld   (37e1h),a
        ret
home:   call savstk
        call diskio
        call restor
        jp   cpmio
restor: ld   c,50h
        call isscmd
        ld   c,0
isscmd: call resel
        ld   a,(pdrive+15)
        and  2
        or   1
        or   c
        ld   (37ech),a
iss1:   call wait
        bit  0,a
        ret  z
        call resel
        jr   iss1
settrk: ld   a,c
        ld   (newtrk),a
        ret
sectrn: ld   a,d
        or   e
        jr   nz,sectr1
sectr0: ld   h,b
        ld   l,c
        ret
sectr1: ex   de,hl
        ld   b,0
        add  hl,bc
        ld   c,(hl)
        ex   de,hl
        jr   sectr0
setsec: ld   (newblk),bc
        ret
setdma: ld   (destin),bc
        ret
read:   call savstk
        call secno
        call readbg
        ret  nz
        call getblk
        ld   de,(destin)
        call move
        xor  a
        ret
move:   ld   b,80h
move1:  ld   a,(hl)
inv1:   nop
        ld   (de),a
        inc  hl
        inc  de
        djnz move1
        ret
secno:  ld   hl,drvbin
        ld   d,(hl)
        res  3,(hl)
        ld   bc,(newblk)
        bit  7,c
        jr   z,secnox
        set  3,(hl)
secnox: ld   a,(hl)
        xor  d
        ld   (sidflg),a
        ld   a,7fh
        and  c
        ld   c,a
        ld   a,(pdrive+15)
        rrca
        rrca
        and  3
secno2: or   a
        ret  z
        srl  c
        dec  a
        jr   secno2
write:  call savstk
        call secno
        call readbg
        ret  nz
        call getblk
        ex   de,hl
        ld   hl,(destin)
        call move
        call wrdisk
        ret
getblk: ld   bc,(newblk)
        ld   a,(pdrive+15)
        rrca
        rrca
        and  3
        ld   b,a
        inc  b
        xor  a
getbl1: scf
        adc  a,a
        djnz getbl1
        srl  a
        and  c
        ld   l,a
        ld   h,0
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        add  hl,hl
        ld   bc,secbuf
        add  hl,bc
        ret
readbg: ld   a,(cursec)
        cp   c
        jr   nz,readb1
        ld   a,(curtrk)
        ld   b,a
        ld   a,(newtrk)
        cp   b
        jr   nz,readb1
        ld   a,(sidflg)
        or   a
        jr   nz,readb1
        ld   a,(selflg)
        or   a
readb1: call nz,rddisk
        ret
sidflg: defb 0
selflg: defb 0
drvbin: defb 0
drvasc: defb 0
trksec: defs 8
pdrive: defs 16
newtrk: defb 0
newblk: defw 0
destin: defw 0
curtrk: defb 0
cursec: defb 0
wait:   ld   a,18
wait1:  dec  a
        jr   nz,wait1
        ld   a,(37ech)
        ret
rddisk: push hl
        push de
        push bc
        xor  a
        ld   (selflg),a
        ld   a,c
        ld   (cursec),a
        ld   a,(newtrk)
        ld   (curtrk),a
        call diskio
        call select
        ld   a,88h
        ld   de,021ah
        call getit
        push af
        call cpmio
        pop  af
        pop  bc
        pop  de
        pop  hl
        ret
wrdisk: push hl
        push de
        push bc
        call diskio
        ld   a,0a8h
        ld   de,0a12h
        call getit
        push af
        call cpmio
        pop  af
        pop  bc
        pop  de
        pop  hl
        ret
getit:  ld   (iolab1),a
        ld   b,1ch
        bit  5,a
        jr   z,getit0
        ld   b,7ch
getit0: ld   a,b
        ld   (dskerr),a
        ld   (getit3),de
        ld   b,2
getit1: push bc
        ld   a,(cursec)
        ld   (37eeh),a
        ld   hl,pdrive+15
        ld   a,(curtrk)
        bit  5,(hl)
        jr   z,getitq
        sla  a
getitq: bit  4,(hl)
        jr   z,getitr
        srl  a
        jr   nc,getitr
        ld   hl,drvbin
        set  3,(hl)
getitr: ld   (37efh),a
        ld   c,18h
        call isscmd
        ld   hl,37ech
        ld   de,37efh
        ld   bc,secbuf
        call resel
        di
        ld   (hl),<iolab1: 88h>
        call wait
        bit  0,(hl)
        jr   z,getit5
        ld   a,(iolab1)
        bit  5,a
        jr   z,getit2
getita: ld   a,83h
        and  (hl)
        jp   po,getita
        ld   a,(bc)
        ld   (de),a
        inc  bc
        ld   a,(bc)
        ld   (savbyt),a
        inc  bc
        ld   a,1
getitb: cp   (hl)
        jr   z,getitb
        ld   a,<savbyt: 0>
        ld   (de),a
        ld   a,(bc)
        inc  bc
        bit  1,(hl)
        jr   nz,getit3
        bit  1,(hl)
        jr   nz,getit3
        jr   getit4
getit2: ld   a,83h
        and  (hl)
        jp   po,getit2
getit3: ld   a,(de)
        ld   (bc),a
        inc  bc
getit4: bit  1,(hl)
        jr   nz,getit3
        bit  1,(hl)
        jr   nz,getit3
        bit  1,(hl)
        jr   nz,getit3
        bit  0,(hl)
        jr   z,getit5
        bit  1,(hl)
        jr   nz,getit3
        bit  7,(hl)
        jr   z,getit4
getit5: ld   a,(hl)
        ld   (hl),0d0h
        pop  bc
        and  <dskerr: 0>
        ret  z
        bit  4,a
        call nz,restor
        djnz getit6
        xor  a
        inc  a
        ret
getit6: jp   getit1
boot:   ld   hl,pdtab
        ld   de,pdrive
        ld   bc,16
        ldir
        ld   a,0c3h
        ld   hl,intkbd
        ld   (38h),a
        ld   (39h),hl
        ld   a,1
        ld   (drvbin),a
        xor  a
        ld   (drvasc),a
        ld   a,81h
        ld   (3),a
        xor  a
        ld   (4),a
        ld   hl,stmsg
boot1:  ld   a,(hl)
        ld   c,a
        or   a
        jp   z,wboot
        call conout
        inc  hl
        jr   boot1
stmsg:  defb 0ch
        defm '64 K Speedmaster CP/M 2.2'
        defb 13,10,0
wboot:  ld   sp,0ffffh
        ld   a,(pdtab+15)
        and  92h
        or   0dh
        ld   (pdrive+15),a
        ld   a,1
        ld   (drvbin),a
        call diskio
        ld   a,0ffh
        ld   (37ech),a
        ld   a,80h
        ld   (37eeh),a
        ld   a,0d0h
        ld   (37ech),a
        xor  a
        ld   (curtrk),a
        ld   de,3400h+offset
        ld   a,4
        ld   (cursec),a
        push de
wbootx: ld   a,88h
        ld   de,021ah
        call getit
        jr   nz,wbootx
        pop  de
        ld   hl,secbuf+200h
        ld   bc,200h
        ldir
        ld   a,1
        ld   (curtrk),a
        xor  a
wboot1: ld   (cursec),a
        push de
wbooty: ld   a,88h
        ld   de,021ah
        call getit
        jr   nz,wbooty
        pop  de
        ld   hl,secbuf
        ld   bc,400h
        ldir
        ld   a,(cursec)
        inc  a
        cp   5
        jr   c,wboot1
wboot2: ld   hl,bios+3
        ld   a,0c3h
        ld   (0),a
        ld   (1),hl
        ld   hl,3c06h+offset
        ld   (5),a
        ld   (6),hl
        ld   hl,intkbd
        ld   (38h),a
        ld   (39h),hl
        ld   c,0
        call seldsk
        ld   a,(4)
        ld   c,a
        jp   3400h+offset
dph:    defw cvtab1
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk1
        defw gat1
;
        defw cvtab2
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk2
        defw gat2
;
        defw cvtab3
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk3
        defw gat3
;
        defw cvtab4
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk4
        defw gat4
;
        defw cvtab5
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk5
        defw gat5
;
        defw cvtab6
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk6
        defw gat6
;
        defw cvtab7
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk7
        defw gat7
;
        defw cvtab8
        defw 0
        defw 0
        defw 0
        defw dirbuf
        defw pdrive
        defw chk8
        defw gat8
;5.25 Zoll Pdrives
pdtab:  defw 40
        defb 4
        defb 15
        defb 0
        defw 194
        defw 127
        defw 00c0h
        defw 32
        defw 2
        defb 8dh
;
        defw 40
        defb 4
        defb 15
        defb 0
        defw 194
        defw 127
        defw 00c0h
        defw 32
        defw 2
        defb 8dh
;
        defw 40
        defb 4
        defb 15
        defb 0
        defw 194
        defw 127
        defw 00c0h
        defw 32
        defw 2
        defb 8dh
;
        defw 40
        defb 4
        defb 15
        defb 0
        defw 194
        defw 127
        defw 00c0h
        defw 32
        defw 2
        defb 8dh
;8 Zoll Pdrives:
        defw 26
        defb 3
        defb 7
        defb 0
        defw 242
        defw 63
        defw 00c0h
        defw 16
        defw 2
        defb 80h
;
        defw 26
        defb 3
        defb 7
        defb 0
        defw 242
        defw 63
        defw 00c0h
        defw 16
        defw 2
        defb 80h
;
        defw 26
        defb 3
        defb 7
        defb 0
        defw 242
        defw 63
        defw 00c0h
        defw 16
        defw 2
        defb 80h
;
        defw 26
        defb 3
        defb 7
        defb 0
        defw 242
        defw 63
        defw 00c0h
        defw 16
        defw 2
        defb 80h
;5.25 Zoll Converttables
cvtab1: defb 00,01,02,03,04,05,06,07
        defb 08,09,10,11,12,13,14,15
        defb 16,17,18,19,20,21,22,23
        defb 24,25,26,27,28,29,30,31
        defb 32,33,34,35,36,37,38,39
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab2: defb 00,01,02,03,04,05,06,07
        defb 08,09,10,11,12,13,14,15
        defb 16,17,18,19,20,21,22,23
        defb 24,25,26,27,28,29,30,31
        defb 32,33,34,35,36,37,38,39
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab3: defb 00,01,02,03,04,05,06,07
        defb 08,09,10,11,12,13,14,15
        defb 16,17,18,19,20,21,22,23
        defb 24,25,26,27,28,29,30,31
        defb 32,33,34,35,36,37,38,39
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab4: defb 00,01,02,03,04,05,06,07
        defb 08,09,10,11,12,13,14,15
        defb 16,17,18,19,20,21,22,23
        defb 24,25,26,27,28,29,30,31
        defb 32,33,34,35,36,37,38,39
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
;8 Zoll Converttables
cvtab5: defb 01,07,13,19,25,05,11,17
        defb 23,03,09,15,21,02,08,14
        defb 20,26,06,12,18,24,04,10
        defb 16,22,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab6: defb 01,07,13,19,25,05,11,17
        defb 23,03,09,15,21,02,08,14
        defb 20,26,06,12,18,24,04,10
        defb 16,22,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab7: defb 01,07,13,19,25,05,11,17
        defb 23,03,09,15,21,02,08,14
        defb 20,26,06,12,18,24,04,10
        defb 16,22,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
cvtab8: defb 01,07,13,19,25,05,11,17
        defb 23,03,09,15,21,02,08,14
        defb 20,26,06,12,18,24,04,10
        defb 16,22,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
        defb 00,00,00,00,00,00,00,00
rdtab:  defb 07,07,07,07,09,09,09,09
        defs 100
cpmstk  equ  $
        defs 50
intstk  equ  $
kbdbuf: defs 64
secbuf: defs 1024
gat1:   defs 50
gat2:   defs 50
gat3:   defs 50
gat4:   defs 50
gat5:   defs 50
gat6:   defs 50
gat7:   defs 50
gat8:   defs 50
chk1:   defs 128
chk2:   defs 128
chk3:   defs 128
chk4:   defs 128
chk5:   defs 128
chk6:   defs 128
chk7:   defs 128
chk8:   defs 128
dirbuf: defs 128
        end
        