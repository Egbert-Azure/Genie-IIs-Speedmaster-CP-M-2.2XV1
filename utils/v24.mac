;********************************************************
;*							*
;*	V24.MAC  8250 Support				*
;*	Genie III CP/M 2.2XV3 Version 1.2  23.1.87	*
;*	Copyright (c) Klaus K{mpf Softwareentwicklung	*
;*					1985,1986,1987	*
;*	Modification History				*
;*	1.0  24.2.86  Original Version			*
;*	1.1  23.3.86  Added NONE Handshake		*
;*	1.2  23.1.86  added bits to handshake CTS/DSR	*
;*							*
;********************************************************

	.z80
	.com
	org	100h
;
r$v24tab	equ	0
;
?boot	equ	0000h
?bdos	equ	0005h
buffer	equ	?boot+80h
;
getchr	equ	01h
putchr	equ	02h
prtstr	equ	09h
getbuf	equ	0ah
open	equ	0fh
close	equ	10h
read	equ	21h
write	equ	22h
setdma	equ	1ah
;
bell	equ	07h
lf	equ	0ah
cr	equ	0dh
esc	equ	1bh
;
;Offsets for v24_base:
;
rbr	equ	0		;receiver buffer register
thr	equ	0		;transmitter holding register
ier	equ	1		;interrupt enable register
;
;Offsets for v24_table:
;
msk	equ	2		;receive MaSK (internal)
lcr	equ	3		;Line Control Register
mcr	equ	4		;Modem Control Register
lsr	equ	5		;Line Status Register
msr	equ	6		;Modem Status Register
hsk	equ	7		;HandShaKe (internal)
lrc	equ	8		;Last Received Character
dll	equ	0		;Divisor Latch Low
dlm	equ	1		;Divisor Latch High
;
v24_base	equ	0e8h
;
;
;
	jp	entry
;
	defb	cr
	defm	'V24.COM Copyright (c) MVC & Klaus K{mpf 1984,1985'
	defb	cr,lf
	defm	'Genie III Version'
	defb	cr,lf
	defm	'Copyright (c) by Klaus K{mpf Softwareentwicklung 1986,1987'
	defb	cr,lf
	defm	'Genie III CP/M 2.2XV3 Version 1.2 vom 23.1.87'
	defb	1ah
;
cnffcb:
	defb	0
	defm	'CONFIG  ','SYS'
	defs	21
rec$num:
	defs	3
;
entry:
	ld	sp,stack

	ld	de,cnffcb
	ld	c,open
	call	?bdos
	inc	a
	jr	nz,open$ok
	ld	a,1
	ld	(cnffcb),a
	ld	c,open
	call	?bdos
	ld	de,no$config
	inc	a
	jp	z,error1
open$ok:
	ld	a,r$v24tab
	ld	(rec$num),a
	ld	de,io_buffer
	ld	c,setdma
	call	?bdos
	ld	de,cnffcb
	ld	c,read
	call	?bdos

	ld	a,cr
	call	tv
	ld	a,lf
	call	tv
	ld	hl,buffer
	ld	a,(hl)
	inc	hl
	or	a				;Any Input ?
	jp	z,v24prt			;N: Show parameters
;
	ld	ix,v24tab
VLOOP:
	LD   DE,TABLE
	CALL GETARG
	JP   Z,SETv24				;WE ARE READY, END OF PARMLIST
	PUSH HL
	EX   DE,HL				;DE=PARM POINTER,HL=TABLE
V0:     LD   A,(DE)				;FROM PARAM
	CP   ','				;END OF PARAMETER
	JR   Z,V1
	CP   ' '
	JR   Z,V1
	CP   00H
	JR   Z,V1
;
	BIT  7,(HL)
	JR   NZ,NXTTAB				;END OF TABLE-ENTRY?
	INC  (HL)
	DEC  (HL)				;END OF TABLE ?
	JR   Z,PAERR				;PARAMETER-ERROR
	CP   (HL)				;CHARACTER THE SAME?
	JR   NZ,NXTTAB				;TRY NEXT IN TABLE
	INC  HL
	INC  DE
	JR   V0					;THIS CHARACTERS ARE THE SAME
;
V1:     BIT  7,(HL)				;TEST IF TERMINATOR IN TABLE
	JR   Z,NXTTAB				;NO TRY NEXT IN TABLE
	POP  AF					;KILL TOS=START OF THIS PARM
	PUSH DE					;SAVE POINTER
	INC  HL
	LD   E,(HL)
	INC  HL
	LD   D,(HL)				;LD DE WITH ADRESS
	LD   BC,V2				;RETURN-ADRESS
	PUSH BC
	INC  HL					;if baud: HL -> divisor code
	ld	a,(hl)
	EX   DE,HL				;HL=ADRESS
	JP   (HL)				;CALL ROUTINE
V2:     POP  HL					;RETRIEVE PARM-POINTER
	JR   VLOOP				;TEST NEXT PARAMTER
;
NXTTAB:
	BIT  7,(HL)
	INC  HL
	JR   Z,NXTTAB				;SEARCH END OF TABLE-ENTRY
	INC  HL
NXT2:   INC  HL					;BEHIND POINTER
	LD   A,(HL)
	OR   A
	JR   Z,NXT3				;TABLE-END-MARKER
	CP   20H				;CHECK IF BD-VALUE (div code)
	JR   C,NXT2
NXT3:   POP  DE					;POINT TO OLD PARM
	PUSH DE
	JR   V0
;
PAERR:  POP  HL
	POP  IX
	JP   error
;
;
;
TA	MACRO	TX,AD
	DEFM	TX
	CALL	AD
	ENDM

TABLE:
MSEVEN: TA 'EVEN',EVEN
MSODD:  TA 'ODD',ODD
MSNO:   TA 'NO',NOPARI
	TA '5',BIT5
	TA '6',BIT6
	TA '7',BIT7
	TA '8',BIT8
	TA '1',STP1
	TA '2',STP2
MSST15: TA '1.5',STP15
MSRTS:  TA 'RTS',RTS
MSDTR:  TA 'DTR',DTR
MSXON:	TA 'XON',XON
MSNONE:	TA 'NONE',NONE
MSWAIT: TA 'WAIT',WAIT
MSNWT:  TA 'NOWAIT',NOWAIT
;
BTA     MACRO	NR,TX
	TA	TX,BAUD
	DEFb	NR				;BAUDRATE-CODE
	ENDM

BDTAB:
	bta	1,'38400'
	BTA	2,'19200'
	BTA	3,'9600'
	bta	4,'7200'
	BTA	5,'4800'
	bta	6,'3600'
	BTA	7,'2400'
	BTA	8,'1800'
	BTA	9,'1200'
	BTA	10,'600'
	BTA	11,'300'
	BTA	12,'150'
	BTA	13,'134.5'
	BTA	14,'110'
	BTA	15,'75'
	BTA	16,'50'
	NOP					;END OF TABLE

divisor_table:
	defw	0005
	defw	0010
	defw	0020
	defw	0027
	defw	0040
	defw	0053
	defw	0080
	defw	0107
	defw	0160
	defw	0320
	defw	0640
	defw	1280
	defw	1428
	defw	1745
	defw	2560
	defw	3840

BAUD:						;a = divisor table offset
	dec	a
	ld	e,a
	ld	d,0
	ld	hl,divisor_table
	add	hl,de
	add	hl,de
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	LD	(v24tab),hl
	RET
;
EVEN:   LD   C,0001_1000b			;**********
	JR   PARITY
ODD:    LD   C,0000_1000b
	JR   PARITY
NOPARI: LD   C,0000_0000b
PARITY: LD   A,(IX+lcr)
	AND  1110_0111b
	OR   C
	LD   (IX+lcr),A
	RET
;
XON:	LD	C,1000_0000b
	ld	b,0000_0011b
	jr	xrd1
RTS:    LD	C,0001_0000B
	ld	b,0000_0001b
	JR	XRD1
DTR:    LD	C,0010_0000B
	ld	b,0000_0010b
	jr	xrd1
none:	ld	c,0000_0000b
	ld	b,0000_0011b

XRD1:
	ld	(ix+mcr),b
	LD	A,(IX+hsk)
	AND	0000_0001b			;leave wait bit
	OR	C
	LD	(IX+hsk),A
	RET

WAIT:   SET  0,(IX+hsk)
	RET

NOWAIT: RES  0,(IX+hsk)
	RET

STP1:   LD   C,0000_0000b
	JR   STPBIT
STP15:  LD   C,0000_0100b
	JR   STPBIT
STP2:   LD   C,0000_0100b

STPBIT: LD   A,(IX+lcr)
	AND  1111_1011b
	or	c
	ld	(ix+lcr),a
	ret
;
BITX    MACRO CODE,mask
	LD    BC,mask*256+CODE
	JR    DATBIT
	ENDM
BIT5:   BITX 0,01fh
BIT6:   BITX 1,03fh
BIT7:   BITX 2,07fh
BIT8:   BITX 3,0ffh
DATBIT: LD   A,(IX+lcr)				;TRANSMIT-CHANNEL
	AND  1111_1100b
	OR   C
	LD   (IX+lcr),A
	ld	(ix+msk),b			;set mask
	ret
;
;
SETv24:
	ld	hl,v24tab			;hl = v24 table
	xor	a
	out	(0efh),a			;8250 Reset
	ld	a,80h
	out	(0ebh),a			;Set Dlab
	ld	c,0e8h				;C = E8
	outi
	inc	c				;C = E9
	outi					;Set divisor latch
	xor	a
	out	(0ebh),a			;Reset Dlab
	out	(c),a				;Reset Int Enable
	inc	c				;C = EA
	out	(c),a				;Reset Int Id
	inc	hl				;inc over receiver mask
	ld	b,4
v24_init_loop:
	inc	c				;C = EB/EC/ED/EE
	outi
	jr	nz,v24_init_loop
;
v24mov:	
	ld	a,r$v24tab
	ld	(rec$num),a
	ld	de,io_buffer
	ld	c,setdma
	call	?bdos
	di
	ld	de,cnffcb
	ld	c,write
	call	?bdos
	di
	ld	de,cnffcb
	ld	c,close
	call	?bdos
	di
;
; Print v24 Configuration
;
v24PRT:						;PRINT PARAMETERS
	LD	IX,v24TAB
PRT1:   LD	HL,MSv24			;"v24 "
	CALL	MESS				;OUTPUT IT
	LD	HL,divisor_table		;SEARCH BAUDRATE
	LD	E,(ix+dll)
	ld	d,(ix+dlm)			;DE = Baudrate div.
search_divisor:
	ld	a,e
	cp	(HL)				;IS IT BAUDRATE?
	INC	HL
	JR	NZ,next_divisor			;NO TRY NEXT
	ld	a,d
	cp	(hl)
next_divisor:
	inc	hl
	jr	nz,search_divisor		;N: try next
;
	ld	de,divisor_table+2
	or	a
	sbc	hl,de
	ld	a,l				;a = 0 .. 30 (divisor code)
	srl	a
	ld	hl,bdtab
search_bdtext:
	ld	bc,hl				;BC -> text
	or	a
	jr	z,bdtext_found
next_bdtext:
	inc	hl
	bit	7,(hl)				;end of text ?
	jr	z,next_bdtext
	ld	de,4
	add	hl,de
	dec	a
	jr	search_bdtext
bdtext_found:
	ld	hl,bc				;START OF TEXT
	CALL MESSH				;OUTPUT IT
	CALL SPACE
	LD   A,(IX+lcr)				;BITS/CHAR
	AND  3					;MASK OFF ALL BUT BIT 0,1
	ADD  A,"5"				;GIVES "5","6","7" OR "8"
	CALL TV
	CALL SPACE
	LD   A,(IX+lcr)				;STOP-BITS/PARITY
	AND  0000_0100b				;STOP-BITS
	JR   Z,PRT5				;'1'
	ld	a,(ix+lcr)
	and	0000_0011b			;5 bit wordlength ?
	ld	a,'2'
	jr	nz,prt6				;N: '2'
	LD   HL,MSST15				;Y: '1.5'
	CALL MESSH
	JR   PRT7
prt5:	ld	A,'1'
prt6:	CALL TV
PRT7:   CALL SPACE
	ld	a,(ix+lcr)			;PARITY
	BIT  3,A
	JR   NZ,PRT8				;NZ=EVEN/ODD
	LD   HL,MSNO				;"NO"
	JR   PRT9
PRT8:   BIT  4,A
	LD   HL,MSEVEN				;"EVEN"
	JR   nZ,PRT9				;************
	LD   HL,MSODD
PRT9:   CALL MESSH				;PRINT EVEN/ODD/NO
	CALL SPACE
	LD   A,(IX+hsk)				;PROTOCOL
	ld	hl,msxon
	bit	7,a
	jr	nz,prt10
	LD   HL,MSRTS
	BIT  5,A
	JR   NZ,PRT10
	LD   HL,MSDTR
	bit	3,a
	jr	nz,prt10
	ld	hl,msnone
PRT10:  PUSH AF
	CALL MESSH				;XON/DTR/RTS
	CALL SPACE
	POP  AF
	LD   HL,MSWAIT
	BIT  0,A				;WAIT ?
	JR   NZ,PRT11				;YES
	LD   HL,MSNWT				;NOWAIT
PRT11:  CALL MESSH
	LD   A,cr
	CALL TV
	ld	a,lf
	call	tv
;
	jp	?boot
;
getarg:	ld	a,(hl)
	cp	0				;End ?
	ret	z
	cp	','
	inc	hl
	ret	z
	cp	' '
	dec	hl
	ret	nz
getar1:	inc	hl
	cp	(hl)
	jr	z,getar1
	ret
;
SPACE:  LD   A," "
	JP   TV

MESSH:  LD   A,(HL)				;OUTPUT A TEXT
	BIT  7,A
	RET  NZ
	INC  HL
	CALL TV
	JR   MESSH
;
mess:	push	bc
	push	de
	push	hl
	ex	de,hl
	ld	c,prtstr
	call	?bdos
	di
	pop	hl
	pop	de
	pop	bc
	ret
;
tv:	push	bc
	push	de
	push	hl
	ld	e,a
	ld	c,putchr
	call	?bdos
	di
	pop	hl
	pop	de
	pop	bc
	ret
;
error:	ld	de,errtxt
error1:
	ld	c,prtstr
	call	?bdos
	jp	?boot

no$config:
	defb	cr,lf,bell
	defm	'Fehler: File CONFIG.SYS nicht gefunden'
	defb	cr,lf,'$'
;
;
MSv24:  DEFm 'V24 $'
;
errtxt:	defb	cr,lf,bell
	defm	'Unbekannter Parameter oder falscher Wert'
	defb	cr,lf,'$'
;
io_buffer:
v24tab	equ	$+70h
	defs	128
;
	defs	128
stack:
	end
