;****************************************************************
;*								*	
;*	CONFIG.MAC  System configuration			*
;*	Genie IIs CP/M 2.2XV1 Version 1.0  19.05.86		*
;*	Copyright (c) by Klaus K{mpf Softwareentwicklung	*
;*						1984,1985,1986	*
;*	Modification History					*
;*	1.0   24.02.86  Original Version			*
;*	1.1   19.04.86  Changed cursor from 50 to 106		*
;*	1.0   19.05.86  1st IIs Adaption			*
;*								*
;****************************************************************
;
;
	.z80
	.com
	org	100h
;
r$systab	equ	0			;SYSTAb is record #0
;
	include CPMHEAD.INC
;
;
	jp	entry
;
	defb	cr
	defm	'CONFIG.COM'
	defb	cr,lf
	defm	'Copyright (c) by Klaus K{mpf Softwareentwicklung '
	defm	'1985,1986'
	defb	cr,lf
	defm	'Genie IIs CP/M 2.2XV1 Version 1.0 vom 19.05.86'
	defb	ctrlz
;
cnffcb:
	defb	0
	defm	'CONFIG  ','SYS'
	defs	21
rec$num:
	defs	3,0
;
entry:
	ld	sp,stack

	ld	de,cnffcb			;Open config.sys
	ld	c,open
	call	?bdos
	inc	a
	jr	nz,open$ok
	ld	a,1
	ld	(cnffcb),a
	ld	c,open
	call	?bdos
	ld	de,no$config
	inc	a
	jp	z,error1

open$ok:
	ld	a,r$systab
	ld	(rec$num),a
	ld	de,sys_table
	ld	c,setdma
	call	?bdos
	ld	de,cnffcb
	ld	c,redrnd
	call	?bdos
;
	ld	de,strtxt
	call	prttxt
;
; Ask for Y = 00H, N = FFH
;
	ld	b,6				;6 Y/N parameters
	ld	ix,par_table_00_ff		;ix = parameter table
nextyn:
	push	ix
	push	bc
	call	crlf
	ld	e,(ix)
	ld	d,(ix+1)			;de = text
	call	prttxt
	ld	e,(ix+2)
	ld	d,(ix+3)			;de = offset
	ld	hl,sys_table
	add	hl,de
	push	hl				;(HL) = parameter
	ld	a,'J'
	bit	0,(hl)				;on ?
	jr	z,itson				;Y: jp
	ld	a,'N'				;N: set 'N'
itson:
	ld	de,fragex
	ld	(de),a				;set Y/N
	call	input				;print & get input
	pop	de				;de -> parameter
	jr	z,nxtpar			;next parameter if no inp
	ld	a,(hl)				;a=1st char of input
	and	05fh				;make uppercase
	ld	c,00h
	cp	'J'
	jr	z,setpar
	ld	c,0ffh
	cp	'N'
	jr	nz,nxtpar
setpar:
	ld	a,c
	ld	(de),a				;set new param value
nxtpar:
	pop	bc
	pop	ix
	inc	ix
	inc	ix
	inc	ix
	inc	ix
	djnz	nextyn	

	call	crlf
;
; Ask parameter Y = 00H, N = C9H
;
	ld	b,4				;4 Y/N parameters
	ld	ix,par_table_00_c9		;ix = parameter table
next_yn:
	push	ix
	push	bc
	call	crlf
	ld	e,(ix)
	ld	d,(ix+1)			;de = text
	call	prttxt
	ld	e,(ix+2)
	ld	d,(ix+3)			;de = offset
	ld	hl,sys_table
	add	hl,de
	push	hl				;(HL) = parameter
	ld	a,'J'
	bit	0,(hl)				;on ?
	jr	z,its_on			;Y: jp
	ld	a,'N'				;N: set 'N'
its_on:
	ld	de,fragex
	ld	(de),a				;set Y/N
	call	input				;print & get input
	pop	de				;de=parameter
	jr	z,next_par			;next parameter if no inp
	ld	a,(hl)				;a=1st char of input
	and	05fh				;make uppercase
	ld	c,00h
	cp	'J'
	jr	z,set_par
	ld	c,0c9h
	cp	'N'
	jr	nz,next_par
set_par:
	ld	a,c
	ld	(de),a				;set new param value
next_par:
	pop	bc
	pop	ix
	inc	ix
	inc	ix
	inc	ix
	inc	ix
	djnz	next_yn	

	call	crlf
;
; Ask charset ASCII/German (IIs only)
;
	ld	de,chrtxt
	call	prttxt
	ld	hl,sys_table+50
	ld	a,'J'
	bit	0,(hl)				;on ?
	jr	nz,ascii_on			;Y: jp
	ld	a,'N'				;N: set 'N'
ascii_on:
	ld	de,fragex
	ld	(de),a				;set Y/N
	call	input				;print & get input
	jr	z,next0				;next parameter if no inp
	ld	a,(hl)				;a=1st char of input
	and	05fh				;make uppercase
	ld	c,01h
	cp	'J'
	jr	z,set_ascii
	ld	c,00h
	cp	'N'
	jr	nz,next0
set_ascii:
	ld	a,c
	ld	(sys_table+50),a		;set new param value
next0:
	call	crlf
;
; Ask retries
;
	ld	de,numtx1
	call	prttxt
	ld	a,(sys_table+45)
	ld	l,a
	ld	h,0
	call	putnum				;print & get input
	jr	z,next1
	call	getnum				;calc num in de
	ld	a,e
	ld	(sys_table+45),a
next1:
	call	crlf
;
; Ask iobyte
;
	ld	de,iobyte_txt
	call	prttxt
	ld	a,(sys_table+0)
	ld	l,a
	ld	h,0
	call	putnum				;print & get input
	jr	z,next2
	call	getnum				;calc num in de
	ld	a,e
	ld	(sys_table+0),a
next2:
;
; Ask cursor
;
	ld	de,cursor_text
	call	prttxt
	ld	a,(sys_table+106)
	ld	l,a
	ld	h,0
	call	putnum				;print & get input
	jr	z,next3
	call	getnum				;calc num in de
	ld	a,e
	ld	(sys_table+106),a
next3:
	call	crlf
;
; Main Disk (errdsk)
;
	ld	de,main1
	call	prttxt
	ld	a,(sys_table+53)
	add	a,'A'
	ld	de,fragex
	ld	(de),a
	call	input
	jr	z,next4
	ld	a,(hl)
	and	5fh
	cp	'A'
	jr	c,next4
	cp	'D'+1
	jr	nc,next4
	sub	'A'
	ld	(sys_table+53),a
next4:
;
; Wboot Disk (rstdsk)
;
;	ld	de,main2
;	call	prttxt
;	ld	a,(sys_table+54)
;	add	a,'A'
;	ld	de,fragex
;	ld	(de),a
;	call	input
;	jr	z,next5
;	ld	a,(hl)
;	and	5fh
;	cp	'A'
;	jr	c,next5
;	cp	'D'+1
;	jr	nc,next5
;	sub	'A'
;	ld	(sys_table+54),a
;next5:
	call	crlf
;
; Time for 1st repeat
;
	ld	de,reptx1
	call	prttxt
	ld	hl,(sys_table+32)
	call	putnum
	jr	z,next6				;jp if no input
	call	getnum
	ld	(sys_table+32),de
next6:
;
; Time till next repeat
;
	ld	de,reptx2
	call	prttxt
	ld	hl,(sys_table+34)
	call	putnum
	jr	z,next7				;jp if no input
	call	getnum
	ld	(sys_table+34),de
next7:
;
; Debounce 1
;
	ld	de,dbnctx1
	call	prttxt
	ld	hl,(sys_table+36)
	call	putnum
	jr	z,next8				;jp if no input
	call	getnum
	ld	(sys_table+36),de
next8:
;
; Debounce 2
;
	ld	de,dbnctx2
	call	prttxt
	ld	hl,(sys_table+38)
	call	putnum
	jr	z,next9				;jp if no input
	call	getnum
	ld	(sys_table+38),de
next9:
	call	crlf
;
; No of tracks
;
	ld	ix,trktab
	ld	b,4
trklop:
	push	bc
	push	ix
	call	crlf
	ld	de,trktxt
	call	prttxt
	ld	e,(ix)
	ld	d,(ix+1)
	call	prttxt
	ld	l,(ix+2)
	ld	h,(ix+3)
	push	hl
	ld	a,(hl)
	ld	l,a
	ld	h,0
	call	putnum
	pop	de
	jr	z,nxttrk			;jp if no input
	push	de
	call	getnum
	pop	hl
	ld	(hl),e				;Save low half
nxttrk:
	pop	ix
	pop	bc
	inc	ix
	inc	ix
	inc	ix
	inc	ix
	djnz	trklop	

	call	crlf
;
; Steprate
;
	ld	ix,stptab
	ld	b,4
stplop:
	push	bc
	push	ix
	call	crlf
	ld	de,stptxt
	call	prttxt
	ld	e,(ix)
	ld	d,(ix+1)
	call	prttxt
	ld	l,(ix+2)
	ld	h,(ix+3)
	push	hl
	ld	a,(hl)
	add	a,'0'
	ld	(fragex),a
	ld	de,fragex
	call	input
	pop	de
	jr	z,nxtstp
	ld	a,(hl)
	cp	'0'
	jr	c,nxtstp
	cp	'4'
	jr	nc,nxtstp
	sub	'0'
	ld	(de),a
nxtstp:
	pop	ix
	pop	bc
	inc	ix
	inc	ix
	inc	ix
	inc	ix
	djnz	stplop

	call	crlf
;
;
;
	ld	de,endtxt
	call	input

	ld	de,sys_table
	ld	c,setdma
	call	?bdos
	ld	a,r$systab
	ld	(rec$num),a
	ld	de,cnffcb
	ld	c,wrtrnd
	call	?bdos

	ld	de,cnffcb
	ld	c,close
	call	?bdos

	jp	?boot
;----------------------------------------------------------
;
; Get Number
;	
getnum:
	ld	de,0
	push	hl
	pop	ix		;ix=bufferpointer
getnu1:
	call	getdgt		;get num to de
	ld	hl,9999
	or	a
	sbc	hl,de
	ret	nc		;ret if num ok
	ld	de,wrginp
	call	input		;get new input
	jr	getnum
;
; Get Digit
;
getdgt:
	ld	a,(ix)
	inc	ix
	cp	'0'	;a=newdigit
	ret	c
	cp	'9'+1
	ret	nc
	sub	'0'
	ld	h,d
	ld	l,e	;hl=oldvalue
	add	hl,hl	;*2
	add	hl,hl	;*4
	add	hl,de	;*5
	add	hl,hl	;*10
	ld	e,a	;de=digit
	ld	d,0
	add	hl,de	;hl=oldvalue*10+newdigit
	ld	d,h
	ld	e,l	;de=newvalue
	jr	getdgt
;
; Show number
;
putnum:
	ld	c,'0'-1
	ld	b,c
	ld	ix,fragev
	ld	de,1000
putnu1:
	inc	b
	or	a
	sbc	hl,de
	jr	nc,putnu1
	add	hl,de
	ld	(ix),b
	ld	b,c
	ld	de,100
putnu2:
	inc	b
	or	a
	sbc	hl,de
	jr	nc,putnu2
	add	hl,de
	ld	(ix+1),b
	ld	b,c
	ld	de,10
putnu3:
	inc	b
	or	a
	sbc	hl,de
	jr	nc,putnu3
	add	hl,de
	ld	(ix+2),b
	ld	b,c
	ld	de,1
putnu4:
	inc	b
	or	a
	sbc	hl,de
	jr	nc,putnu4
	ld	(ix+3),b
	push	ix
	pop	de
;
; Get input
;
input:
	call	prttxt
	ld	hl,007eh
	ld	(@buffer),hl
	ld	de,@buffer
	ld	c,getbuf
	call	?bdos
	ld	hl,@buffer+1			;hl=# of chars inputted
	ld	a,(hl)
	inc	hl				;hl=1st char
	or	a
	ret	z				;Z: no input
	ld	e,a
	ld	d,0
	add	hl,de
	ld	(hl),0
	ld	hl,@buffer+2
	or	a				;NZ: input
	ret

;
error1:
	ld	c,prtstr
	call	?bdos
	jp	?boot

crlf:
	ld	de,crlftx
prttxt:
	ld	c,prtstr
	jp	?bdos
;
;----------------------------------------------------------
; Parameter Table
; Textadress, systaboffset
;
par_table_00_ff:
	defw	text1				;Logo ?
	defw	1
	defw	text2				;Int ?
	defw	10
	defw	text5				;CRT lf ?
	defw	42
	defw	text6				;wrap ?
	defw	43
	defw	text7				;Fx act ?
	defw	44
	defw	text8				;LST lf ?
	defw	46
;
par_table_00_c9:
	defw	p1_txt				;click
	defw	0002h
	defw	p2_txt				;repeat
	defw	0003h
	defw	p3_txt				;error
	defw	0004h
	defw	p7_txt				;bell ?
	defw	0008h
trktab:
	defw	lwtxt0
	defw	sys_table+44h
	defw	lwtxt1
	defw	sys_table+45h
	defw	lwtxt2
	defw	sys_table+46h
	defw	lwtxt3
	defw	sys_table+47h
stptab:
	defw	lwtxt0
	defw	sys_table+40h
	defw	lwtxt1
	defw	sys_table+41h
	defw	lwtxt2
	defw	sys_table+42h
	defw	lwtxt3
	defw	sys_table+43h
lwtab:
	defw	lwtxt0
	defw	lwtxt1
	defw	lwtxt2
	defw	lwtxt3
strtxt:
	defb	1ah,esc,'_2'
	defm	'Genie IIs CP/M 2.2XV1 Systemkonfigurierung'
	defb	cr,lf
	defm	'Copyright (c) by Klaus K{mpf Softwareentwicklung '
	defm	'1984,1985,1986'
	defb	cr,lf,cr,lf,'$'

no$config:
	defb	cr,lf,bell
	defm	'Fehler: File CONFIG.SYS nicht gefunden'
	defb	cr,lf,'$'

crlftx:	defb	cr,lf,'$'
text1:	defm	'Logo anzeigen ($'
text2:	defm	'Interrupts aktivieren ($'
text3:	defm	'Alte Tastatur ($'
text4:	defm	'Statuszeile anzeigen ($'
text5:	defm	'Automatischer Zeilenvorschub ($'
text6:	defm	'Zeilen}berlauf ($'
text7:	defm	'Funktionstasten aktivieren ($'
text8:	defm	'Zeilenvorschub zum Drucker senden ($'
text9:	defm	'Zeichen einf}gen ($'
text10:	defm	'Seitenmodus ($'
text11:	defm	'R}ckmeldung mit Leerzeichen ($'
;
p1_txt:	defm	'Tastenklick einschalten ($'
p2_txt:	defm	'Tastenwiederholung einschalten ($'
p3_txt:	defm	'Fehlermeldung einschalten ($'
p4_txt:	defm	'Pufferanzeige einschalten ($'
p5_txt:	defm	'Monitormodus einschalten ($'
p6_txt:	defm	'Uhrzeit anzeigen ($'
p7_txt:	defm	'Lautsprecher einschalten ($'
;
chrtxt:	defb	cr,lf
	defm	'ASCII-Zeichensatz aktivieren ($'
;
fragex:	defm	'X) ? $'	
fragev:	defm	'nnnn) ? $'

numtx1:	defb	cr,lf
	defm	'Anzahl der Schreib/Leseversuche ($'
;numtx2:	defb	cr,lf
;	defm	'Anzahl der Leerzeichen bei R}ckmeldung ($'
;
iobyte_txt:
	defb	cr,lf
	defm	'IOBYTE ($'
cursor_text:
	defb	cr,lf
	defm	'Cursor Type ($'
;
reptx1:	defb	cr,lf
	defm	'Zeit bis zur ersten Wiederholung ($'
reptx2:	defb	cr,lf
	defm	'Zeit bis zur n{chsten Wiederholung ($'
;reptx3:defb	cr,lf
;	defm	'Zeitfaktor bei Statusabfrage ($'
;
dbnctx1:
	defb	cr,lf
	defm	'Entprellzeit 1 ($'
dbnctx2:
	defb	cr,lf
	defm	'Entprellzeit 2 ($'
;
main1:	defb	cr,lf
	defm	'Hauptlaufwerk ($'
;main2:	defb	cr,lf
;	defm	'Laufwerk f}r Warmstart ($'
;
trktxt:	defm	'Anzahl der Spuren $'
stptxt:	defm	'Kopfzugriffszeit $'
;
lwtxt0:	defm	'des ersten Laufwerks ($'
lwtxt1:	defm	'des zweiten Laufwerks ($'
lwtxt2:	defm	'des dritten Laufwerks ($'
lwtxt3:	defm	'des vierten Laufwerks ($'
;
;
endtxt:	defb	cr,lf,cr,lf
	defm	'Dr}cken Sie <ENTER> zum Abspeichern der '
	defm	'neuen Konfiguration$'
;
wrginp:	defb	cr,lf,bell
	defm	'Fehlerhafte Eingabe. Nochmal bitte: $'
;
sys_table:
	defs	128,0

	defs	128,0
stack:

	end
